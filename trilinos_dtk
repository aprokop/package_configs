#!/bin/bash
EXTRA_ARGS=$@

rm -f  CMakeCache.txt
rm -rf CMakeFiles/
rm -f  build.ninja
rm -f  rules.ninja

TRILINOS_DIR="${TRILINOS_DIR:-$(pwd)/../..}"

ARGS=(
    -D CMAKE_BUILD_TYPE=RelWithDebInfo

    -D CMAKE_INSTALL_PREFIX=$HOME/local/opt/trilinos-dtk/

    -D BUILD_SHARED_LIBS=ON

    ### COMPILERS AND FLAGS ###
    -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
    -D Trilinos_TPL_SYSTEM_INCLUDE_DIRS=ON
    -D Trilinos_ENABLE_Fortran=OFF

    ### TPLS ###
    -D TPL_ENABLE_MPI=ON

    ### ETI ###
    -D Trilinos_ENABLE_EXPLICIT_INSTANTIATION=ON
    # Serial
    -D Kokkos_ENABLE_SERIAL=ON
    -D Tpetra_INST_SERIAL=ON
    # OpenMP
    -D Trilinos_ENABLE_OpenMP=ON
    -D Kokkos_ENABLE_OPENMP=ON
    -D Tpetra_INST_OPENMP=ON
    # CUDA
    -D TPL_ENABLE_CUDA=ON
    -D CMAKE_CXX_COMPILER="${TRILINOS_DIR}/packages/kokkos/bin/nvcc_wrapper"
    -D Trilinos_ENABLE_CXX11=ON
        -D Trilinos_CXX11_FLAGS="-std=c++14 -expt-extended-lambda"
    -D Kokkos_ENABLE_CUDA=ON
        -D Kokkos_ENABLE_CUDA_UVM=ON
        -D Kokkos_ENABLE_CUDA_LAMBDA=ON
        -D KOKKOS_ARCH_PASCAL61=ON

    ### PACKAGES CONFIGURATION ###
    -D Trilinos_ENABLE_ALL_PACKAGES=OFF
    -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES=OFF
    -D Trilinos_ASSERT_MISSING_PACKAGES=OFF

    -D Trilinos_ENABLE_TESTS=OFF
    -D Trilinos_ENABLE_EXAMPLES=OFF

    -D Trilinos_ENABLE_Intrepid2=ON
    -D Trilinos_ENABLE_Kokkos=ON
    -D Trilinos_ENABLE_Teuchos=ON
    -D Trilinos_ENABLE_Tpetra=ON
    )
cmake_cmd="cmake -GNinja ${ARGS[@]} $EXTRA_ARGS ${TRILINOS_DIR}"

set -o pipefail
echo $cmake_cmd
eval $cmake_cmd 2>&1 | tee configure.log
exit_status=$?

if [ $exit_status -eq 0 ]; then
  # Record environment for future
  [[ -f build.env    ]] && mv build.env    build.env.old
  [[ -f build.module ]] && mv build.module build.module.old
  env          > build.env
  module list -t 2>&1 | tail -n +2 > build.module
fi
