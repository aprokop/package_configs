#!/bin/sh
EXTRA_ARGS=$@

rm -f  CMakeCache.txt
rm -rf CMakeFiles/
rm -f  build.ninja
rm -f  rules.ninja

SYSTEM_HEADERS=""
for header_dir in `echo $CPATH | sed 's/:/\ /g'`; do
  SYSTEM_HEADERS="$SYSTEM_HEADERS -isystem $header_dir"
done

CXX_FLAGS_COMPILER_SPECIFIC=""
if [ "$OMPI_MPICXX" == "g++" ]; then
    CXX_FLAGS_COMPILER_SPECIFIC="-Wno-unused-local-typedefs"
elif [ "$OMPI_MPICXX" == "clang++" ]; then
    CXX_FLAGS_COMPILER_SPECIFIC=""
fi

HOST="localhost"
SHARED="true"

### TPLS ###
if [ "$HOST" == "localhost" ]; then
    BLAS_PATH="/usr/lib64"
    LAPACK_PATH="/usr/lib64"
    MPI_PATH="$HOME/local/opt/openmpi-1.10.0/"

    if [ "$SHARED" == "true" ]; then
        BLAS_LIB="${BLAS_PATH}/libblas.so"

    else
        BLAS_LIB="${BLAS_PATH}/libblas.a"
    fi

elif [ "$HOST" == "volta" ]; then
    BLAS_PATH="/opt/cray/libsci/13.0.0/gnu/49/ivybridge/lib/"
    LAPACK_PATH="${BLAS_PATH}"
    MPI_PATH="/opt/cray/mpt/7.0.1/gni/mpich2-intel/140"

    if [ "$SHARED" == "true" ]; then
        echo "Use STATIC build on Volta"
        exit 1

    else
        BLAS_LIB="${BLAS_PATH}/libsci_gnu_49_mpi.a"
        LAPACK_LIB="${LAPACK_PATH}/libsci_gnu_49_mpi.a"
    fi
fi


ARGS=(
    -D CMAKE_BUILD_TYPE=RELWITHDEBINFO

    -D CMAKE_INSTALL_PREFIX=$HOME/local/opt/trilinos/

    -D BUILD_SHARED_LIBS="$SHARED"

    ### COMPILERS AND FLAGS ###
    -D Trilinos_ENABLE_Fortran=OFF
    -D CMAKE_CXX_FLAGS="-Wall -Wextra -Wno-unused-parameter $CXX_FLAGS_COMPILER_SPECIFIC $SYSTEM_HEADERS"
    -D Trilinos_ENABLE_SHADOW_WARNINGS=ON

    ### TPLS ###
    -D TPL_ENABLE_MPI=ON
        -D MPI_BASE_DIR="${MPI_PATH}"
    -D TPL_ENABLE_BLAS=ON
        -D TPL_BLAS_LIBRARIES=${BLAS_LIB}
    -D TPL_ENABLE_LAPACK=ON
        -D TPL_LAPACK_LIBRARIES=${LAPACK_LIB}

    ### ETI ###
    -D Trilinos_ENABLE_EXPLICIT_INSTANTIATION=ON
        # -D Teuchos_ENABLE_COMPLEX=ON
        -D Tpetra_INST_INT_LONG=OFF
        -D Tpetra_INST_INT_LONG_LONG=OFF
        # -D Tpetra_INST_INT_LONG_LONG=ON
        # -D Tpetra_INST_COMPLEX_DOUBLE=ON
        # -D Tpetra_INST_FLOAT=ON
        # -D Tpetra_INST_COMPLEX_FLOAT=ON

    ### PACKAGES CONFIGURATION ###
    -D Trilinos_ENABLE_ALL_PACKAGES=OFF
    -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES=OFF
    -D Trilinos_ASSERT_MISSING_PACKAGES=OFF

    -D Trilinos_ENABLE_TESTS=OFF
    -D Trilinos_ENABLE_EXAMPLES=OFF

    -D Trilinos_ENABLE_Amesos=ON
    -D Trilinos_ENABLE_Amesos2=ON
        -D Amesos2_ENABLE_KLU2=ON
    -D Trilinos_ENABLE_AztecOO=ON
    -D Trilinos_ENABLE_Epetra=ON
        -D Epetra_ENABLE_Teuchos=ON
    -D Trilinos_ENABLE_EpetraExt=ON
    -D Trilinos_ENABLE_Ifpack=ON
    -D Trilinos_ENABLE_Ifpack2=ON
    -D Trilinos_ENABLE_Intrepid=ON
    -D Trilinos_ENABLE_Isorropia=ON
    -D Trilinos_ENABLE_Kokkos=ON
    -D Trilinos_ENABLE_ML=ON
        -D ML_ENABLE_TESTS=ON
    -D Trilinos_ENABLE_MueLu=ON
        -D MueLu_ENABLE_Experimental=ON
        -D MueLu_ENABLE_BROKEN_TESTS=ON
        -D MueLu_ENABLE_TESTS=ON
        -D MueLu_ENABLE_EXAMPLES=ON
        -D MueLu_ENABLE_DEBUG=ON
        -D MueLu_ENABLE_BROKEN_TESTS=ON
        -D MueLu_ENABLE_Amesos2=ON
        -D MueLu_ENABLE_Ifpack2=ON
        # -D MueLu_ENABLE_PROFILING=ON
    -D Trilinos_ENABLE_Pamgen=ON
    -D Trilinos_ENABLE_ShyLU=OFF
    -D Trilinos_ENABLE_Stratimikos=ON
    -D Trilinos_ENABLE_Teuchos=ON
    -D Trilinos_ENABLE_Teko=ON
    -D Trilinos_ENABLE_Thyra=ON
    -D Trilinos_ENABLE_Tpetra=ON
    -D Trilinos_ENABLE_TrilinosCouplings=ON
        -D TrilinosCouplings_ENABLE_EXAMPLES=ON
    -D Trilinos_ENABLE_Xpetra=ON
        -D Xpetra_ENABLE_Experimental=ON
        -D Xpetra_ENABLE_EXAMPLES=ON
        -D Xpetra_ENABLE_TESTS=ON
    -D Trilinos_ENABLE_Zoltan=ON
    -D Trilinos_ENABLE_Zoltan2=ON
        -D Zoltan2_ENABLE_Experimental=ON
        -D Zoltan2_ENABLE_TESTS=ON

    ### MISC ###
    -D CMAKE_EXPORT_COMPILE_COMMANDS=OFF
    -D Trilinos_ENABLE_INSTALL_CMAKE_CONFIG_FILES=OFF
    -D Trilinos_DEPS_XML_OUTPUT_FILE=""

    )

cmake -GNinja "${ARGS[@]}" $EXTRA_ARGS ../../ | tee configure.log

# Record environment for future
[[ -f build.env    ]] && mv build.env    build.env.old
[[ -f build.module ]] && mv build.module build.module.old
env          > build.env
module list &> build.module
